// Generated by view binder compiler. Do not edit!
package com.sansheng.storypal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sansheng.storypal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnChildHome;

  @NonNull
  public final Button btnChildReading;

  @NonNull
  public final Button btnChildRewards;

  @NonNull
  public final Button btnChildScan;

  @NonNull
  public final Button btnDeviceConnect;

  @NonNull
  public final Button btnParentDashboard;

  @NonNull
  public final Button btnProjectorMode;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnChildHome,
      @NonNull Button btnChildReading, @NonNull Button btnChildRewards,
      @NonNull Button btnChildScan, @NonNull Button btnDeviceConnect,
      @NonNull Button btnParentDashboard, @NonNull Button btnProjectorMode) {
    this.rootView = rootView;
    this.btnChildHome = btnChildHome;
    this.btnChildReading = btnChildReading;
    this.btnChildRewards = btnChildRewards;
    this.btnChildScan = btnChildScan;
    this.btnDeviceConnect = btnDeviceConnect;
    this.btnParentDashboard = btnParentDashboard;
    this.btnProjectorMode = btnProjectorMode;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChildHome;
      Button btnChildHome = ViewBindings.findChildViewById(rootView, id);
      if (btnChildHome == null) {
        break missingId;
      }

      id = R.id.btnChildReading;
      Button btnChildReading = ViewBindings.findChildViewById(rootView, id);
      if (btnChildReading == null) {
        break missingId;
      }

      id = R.id.btnChildRewards;
      Button btnChildRewards = ViewBindings.findChildViewById(rootView, id);
      if (btnChildRewards == null) {
        break missingId;
      }

      id = R.id.btnChildScan;
      Button btnChildScan = ViewBindings.findChildViewById(rootView, id);
      if (btnChildScan == null) {
        break missingId;
      }

      id = R.id.btnDeviceConnect;
      Button btnDeviceConnect = ViewBindings.findChildViewById(rootView, id);
      if (btnDeviceConnect == null) {
        break missingId;
      }

      id = R.id.btnParentDashboard;
      Button btnParentDashboard = ViewBindings.findChildViewById(rootView, id);
      if (btnParentDashboard == null) {
        break missingId;
      }

      id = R.id.btnProjectorMode;
      Button btnProjectorMode = ViewBindings.findChildViewById(rootView, id);
      if (btnProjectorMode == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnChildHome, btnChildReading,
          btnChildRewards, btnChildScan, btnDeviceConnect, btnParentDashboard, btnProjectorMode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
